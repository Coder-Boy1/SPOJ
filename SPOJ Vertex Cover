#include <bits/stdc++.h>
using namespace std;

#define int long long

#define N 200005

vector < int > a[N];
int vis[N];
int dp[N][2];

void dfs(int n,int p)
{
        vis[n]=1;
        for(int i=0;i<a[n].size();i++)
        {
                if(vis[a[n][i]]==0)
                        dfs(a[n][i],n);
        }
        int ans=0;
        int ans1=1;
        for(int i=0;i<a[n].size();i++)
        {
                if(a[n][i]==p)
                        continue;
                ans+=dp[a[n][i]][1];
                ans1+=min(dp[a[n][i]][1],dp[a[n][i]][0]);
        }
        dp[n][0]=ans;
        dp[n][1]=ans1;
}

int32_t main()
{
        ios_base::sync_with_stdio(false);

        int n;
        cin>>n;

        for(int i=0;i<n-1;i++)
        {
                int t1,t2;
                cin>>t1>>t2;
                a[t1].push_back(t2);
                a[t2].push_back(t1);
        }

        dfs(1,0);

        cout<<min(dp[1][1],dp[1][0])<<endl;

        return 0;
}

